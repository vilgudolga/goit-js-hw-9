{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBAG3C,SAASG,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXKN,SAASC,cAAc,yBAkB/BY,iBAAiB,SAASC,IAClCC,QAAQC,IAAI,UACZF,EAAEG,iBACF,MAAMC,EAAaC,OAAOpB,EAAgBqB,OACpCC,EAAYF,OAAOjB,EAAekB,OAClCE,EAASH,OAAOhB,EAAYiB,OAClCL,QAAQC,IAAK,GAAGE,MAAeI,KAC/B,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAChCR,QAAQC,IAAIO,GAEZnB,EAAcmB,EADCL,EAAaG,GAAaE,EAAI,IAE1CC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA5B,GAAS6B,OAAOC,QACd,qBAAqBtB,QAAeC,OACrC,IAEFsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA5B,GAAS6B,OAAOG,QACd,oBAAoBxB,QAAeC,OACpC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst firstDelayInput = document.querySelector('input[name=\"delay\"]');\nconst stepDelayInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst createBtn = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n};\n\n\n\ncreateBtn.addEventListener('click', e => {\n  console.log(\"dziala\")\n  e.preventDefault();\n  const firstDelay = Number(firstDelayInput.value);\n  const stepDelay = Number(stepDelayInput.value);\n  const amount = Number(amountInput.value);\n  console.log (`${firstDelay}  ${amount}`)\n  for (let i = 1; i <= amount; i++) {\n    console.log(i);\n    let stepTime = firstDelay + stepDelay * (i - 1);\n    createPromise(i, stepTime)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position} in ${delay} ms`\n        );\n      });\n  }\n});"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$firstDelayInput","document","querySelector","$47d4ff9957288465$var$stepDelayInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","console","log","preventDefault","firstDelay","Number","value","stepDelay","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.0853a789.js.map"}